version: "2"

volumes:
  dbvolume:
  ipython:
  static_volume:
  torrent:

services:
  db:
    image: postgres:9.6.17
    env_file:
      - .env
    ports:
      - 5543:5432
    volumes:
      - dbvolume:/var/lib/postgresql/data/
  web:
    image: webmultimedia/http-streaming-server:master
    build:
      context: .
      dockerfile: ./backend/Dockerfile.prod
    restart: always
    ports:
      - 51413:51413
    env_file:
      - .env
    environment:
      - DEPLOY_ENV=production
    volumes:
      - ./Videos/:/usr/src/app/Videos
      # To be fixed, backend code is mapped here to share static files (react build) with nginx
      - ./backend/:/usr/src/app/
      - /static/
      - ipython:/root/.ipython
      - torrent:/usr/torrent/:rw
    command: bash -c "service transmission-daemon start && python3 /usr/src/app/manage.py collectstatic --no-input && gunicorn StreamingServer.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      - db
      - redis

  nginx:
    build: ./nginx
    volumes:
      - ./backend/:/usr/src/app/
      - ./Videos/:/usr/src/app/Videos
      - static_volume:/usr/src/app/staticfiles
      - torrent:/usr/torrent/:rw
    ports:
      - 1337:80
    depends_on:
      - web

  celery:
    build:
      context: .
      dockerfile: ./backend/Dockerfile.prod
    image: webmultimedia/http-streaming-server:master
    command: celery -A StreamingServer worker -l info
    volumes:
        - ./backend/:/usr/src/app/
        - ./Videos/:/usr/src/app/Videos
    env_file:
        - .env
    environment:
      - DEPLOY_ENV=production
    depends_on:
        - db
        - redis

  redis:
    image: redis:alpine
    command: redis-server --port 6380
